trigger:
  branches:
    include:
      - develop
      - feature/pps_v1.0
 
pool:
  vmImage: ubuntu-latest
 
variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  CACHE_KEY: maven | $(Agent.OS) | **/pom.xml
  CACHE_FALLBACK_KEY: maven | $(Agent.OS)
 
 
steps:
 
- task: Cache@2
  inputs:
    key: $(CACHE_KEY)
    restoreKeys: $(CACHE_FALLBACK_KEY)
    path: $(MAVEN_CACHE_FOLDER)
    cacheHitVar: CACHE_RESTORED
  displayName: Cache Mevn local repo
 
- task: Maven@3
  displayName: 'Build Artifact'
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQuebe'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'CPPaymentProcessing'
    cliSources: 'src'
    extraProperties: |
      sonar.java.binaries=.
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      FILTERED_PARAMS=$(echo $SONARQUBE_SCANNER_PARAMS | sed 's/"sonar.branch.name":"[^"]*"\,//g')
          echo "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$FILTERED_PARAMS"
- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME_11_X64'
- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: CopyFiles@2
  inputs:
    Contents: |
      **/*.jar
      .azure/kube/**
      post-deployment/**
    TargetFolder: '$(build.artifactStagingDirectory)'
    OverWrite: true
 
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'cp-payment-processing'
 
- task: Docker@2
  inputs:
    containerRegistry: 'pd-cp-acr'
    repository: 'pd-cp-paymentprocessing-svc'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
